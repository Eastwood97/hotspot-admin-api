package com.jsc.hotspot.db.domain;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class CameraCompareResultExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table camera_compare_result
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table camera_compare_result
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table camera_compare_result
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table camera_compare_result
     *
     * @mbg.generated
     */
    public CameraCompareResultExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table camera_compare_result
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table camera_compare_result
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table camera_compare_result
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table camera_compare_result
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table camera_compare_result
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table camera_compare_result
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table camera_compare_result
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table camera_compare_result
     *
     * @mbg.generated
     */
    public CameraCompareResultExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table camera_compare_result
     *
     * @mbg.generated
     */
    public CameraCompareResultExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table camera_compare_result
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table camera_compare_result
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table camera_compare_result
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table camera_compare_result
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        CameraCompareResultExample example = new CameraCompareResultExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table camera_compare_result
     *
     * @mbg.generated
     */
    public CameraCompareResultExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table camera_compare_result
     *
     * @mbg.generated
     */
    public CameraCompareResultExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table camera_compare_result
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andIdEqualToColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andIdNotEqualToColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanOrEqualToColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanOrEqualToColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andFullDatIdIsNull() {
            addCriterion("full_dat_id is null");
            return (Criteria) this;
        }

        public Criteria andFullDatIdIsNotNull() {
            addCriterion("full_dat_id is not null");
            return (Criteria) this;
        }

        public Criteria andFullDatIdEqualTo(String value) {
            addCriterion("full_dat_id =", value, "fullDatId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andFullDatIdEqualToColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("full_dat_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFullDatIdNotEqualTo(String value) {
            addCriterion("full_dat_id <>", value, "fullDatId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andFullDatIdNotEqualToColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("full_dat_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFullDatIdGreaterThan(String value) {
            addCriterion("full_dat_id >", value, "fullDatId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andFullDatIdGreaterThanColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("full_dat_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFullDatIdGreaterThanOrEqualTo(String value) {
            addCriterion("full_dat_id >=", value, "fullDatId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andFullDatIdGreaterThanOrEqualToColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("full_dat_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFullDatIdLessThan(String value) {
            addCriterion("full_dat_id <", value, "fullDatId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andFullDatIdLessThanColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("full_dat_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFullDatIdLessThanOrEqualTo(String value) {
            addCriterion("full_dat_id <=", value, "fullDatId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andFullDatIdLessThanOrEqualToColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("full_dat_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFullDatIdLike(String value) {
            addCriterion("full_dat_id like", value, "fullDatId");
            return (Criteria) this;
        }

        public Criteria andFullDatIdNotLike(String value) {
            addCriterion("full_dat_id not like", value, "fullDatId");
            return (Criteria) this;
        }

        public Criteria andFullDatIdIn(List<String> values) {
            addCriterion("full_dat_id in", values, "fullDatId");
            return (Criteria) this;
        }

        public Criteria andFullDatIdNotIn(List<String> values) {
            addCriterion("full_dat_id not in", values, "fullDatId");
            return (Criteria) this;
        }

        public Criteria andFullDatIdBetween(String value1, String value2) {
            addCriterion("full_dat_id between", value1, value2, "fullDatId");
            return (Criteria) this;
        }

        public Criteria andFullDatIdNotBetween(String value1, String value2) {
            addCriterion("full_dat_id not between", value1, value2, "fullDatId");
            return (Criteria) this;
        }

        public Criteria andFullImgIdIsNull() {
            addCriterion("full_img_id is null");
            return (Criteria) this;
        }

        public Criteria andFullImgIdIsNotNull() {
            addCriterion("full_img_id is not null");
            return (Criteria) this;
        }

        public Criteria andFullImgIdEqualTo(String value) {
            addCriterion("full_img_id =", value, "fullImgId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andFullImgIdEqualToColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("full_img_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFullImgIdNotEqualTo(String value) {
            addCriterion("full_img_id <>", value, "fullImgId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andFullImgIdNotEqualToColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("full_img_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFullImgIdGreaterThan(String value) {
            addCriterion("full_img_id >", value, "fullImgId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andFullImgIdGreaterThanColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("full_img_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFullImgIdGreaterThanOrEqualTo(String value) {
            addCriterion("full_img_id >=", value, "fullImgId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andFullImgIdGreaterThanOrEqualToColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("full_img_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFullImgIdLessThan(String value) {
            addCriterion("full_img_id <", value, "fullImgId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andFullImgIdLessThanColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("full_img_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFullImgIdLessThanOrEqualTo(String value) {
            addCriterion("full_img_id <=", value, "fullImgId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andFullImgIdLessThanOrEqualToColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("full_img_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFullImgIdLike(String value) {
            addCriterion("full_img_id like", value, "fullImgId");
            return (Criteria) this;
        }

        public Criteria andFullImgIdNotLike(String value) {
            addCriterion("full_img_id not like", value, "fullImgId");
            return (Criteria) this;
        }

        public Criteria andFullImgIdIn(List<String> values) {
            addCriterion("full_img_id in", values, "fullImgId");
            return (Criteria) this;
        }

        public Criteria andFullImgIdNotIn(List<String> values) {
            addCriterion("full_img_id not in", values, "fullImgId");
            return (Criteria) this;
        }

        public Criteria andFullImgIdBetween(String value1, String value2) {
            addCriterion("full_img_id between", value1, value2, "fullImgId");
            return (Criteria) this;
        }

        public Criteria andFullImgIdNotBetween(String value1, String value2) {
            addCriterion("full_img_id not between", value1, value2, "fullImgId");
            return (Criteria) this;
        }

        public Criteria andTargetFacesIsNull() {
            addCriterion("target_faces is null");
            return (Criteria) this;
        }

        public Criteria andTargetFacesIsNotNull() {
            addCriterion("target_faces is not null");
            return (Criteria) this;
        }

        public Criteria andTargetFacesEqualTo(String value) {
            addCriterion("target_faces =", value, "targetFaces");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andTargetFacesEqualToColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("target_faces = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTargetFacesNotEqualTo(String value) {
            addCriterion("target_faces <>", value, "targetFaces");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andTargetFacesNotEqualToColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("target_faces <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTargetFacesGreaterThan(String value) {
            addCriterion("target_faces >", value, "targetFaces");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andTargetFacesGreaterThanColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("target_faces > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTargetFacesGreaterThanOrEqualTo(String value) {
            addCriterion("target_faces >=", value, "targetFaces");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andTargetFacesGreaterThanOrEqualToColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("target_faces >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTargetFacesLessThan(String value) {
            addCriterion("target_faces <", value, "targetFaces");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andTargetFacesLessThanColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("target_faces < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTargetFacesLessThanOrEqualTo(String value) {
            addCriterion("target_faces <=", value, "targetFaces");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andTargetFacesLessThanOrEqualToColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("target_faces <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTargetFacesLike(String value) {
            addCriterion("target_faces like", value, "targetFaces");
            return (Criteria) this;
        }

        public Criteria andTargetFacesNotLike(String value) {
            addCriterion("target_faces not like", value, "targetFaces");
            return (Criteria) this;
        }

        public Criteria andTargetFacesIn(List<String> values) {
            addCriterion("target_faces in", values, "targetFaces");
            return (Criteria) this;
        }

        public Criteria andTargetFacesNotIn(List<String> values) {
            addCriterion("target_faces not in", values, "targetFaces");
            return (Criteria) this;
        }

        public Criteria andTargetFacesBetween(String value1, String value2) {
            addCriterion("target_faces between", value1, value2, "targetFaces");
            return (Criteria) this;
        }

        public Criteria andTargetFacesNotBetween(String value1, String value2) {
            addCriterion("target_faces not between", value1, value2, "targetFaces");
            return (Criteria) this;
        }

        public Criteria andVideoIdIsNull() {
            addCriterion("video_id is null");
            return (Criteria) this;
        }

        public Criteria andVideoIdIsNotNull() {
            addCriterion("video_id is not null");
            return (Criteria) this;
        }

        public Criteria andVideoIdEqualTo(String value) {
            addCriterion("video_id =", value, "videoId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andVideoIdEqualToColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("video_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVideoIdNotEqualTo(String value) {
            addCriterion("video_id <>", value, "videoId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andVideoIdNotEqualToColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("video_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVideoIdGreaterThan(String value) {
            addCriterion("video_id >", value, "videoId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andVideoIdGreaterThanColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("video_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVideoIdGreaterThanOrEqualTo(String value) {
            addCriterion("video_id >=", value, "videoId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andVideoIdGreaterThanOrEqualToColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("video_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVideoIdLessThan(String value) {
            addCriterion("video_id <", value, "videoId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andVideoIdLessThanColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("video_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVideoIdLessThanOrEqualTo(String value) {
            addCriterion("video_id <=", value, "videoId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andVideoIdLessThanOrEqualToColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("video_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVideoIdLike(String value) {
            addCriterion("video_id like", value, "videoId");
            return (Criteria) this;
        }

        public Criteria andVideoIdNotLike(String value) {
            addCriterion("video_id not like", value, "videoId");
            return (Criteria) this;
        }

        public Criteria andVideoIdIn(List<String> values) {
            addCriterion("video_id in", values, "videoId");
            return (Criteria) this;
        }

        public Criteria andVideoIdNotIn(List<String> values) {
            addCriterion("video_id not in", values, "videoId");
            return (Criteria) this;
        }

        public Criteria andVideoIdBetween(String value1, String value2) {
            addCriterion("video_id between", value1, value2, "videoId");
            return (Criteria) this;
        }

        public Criteria andVideoIdNotBetween(String value1, String value2) {
            addCriterion("video_id not between", value1, value2, "videoId");
            return (Criteria) this;
        }

        public Criteria andCaptureTimeIsNull() {
            addCriterion("capture_time is null");
            return (Criteria) this;
        }

        public Criteria andCaptureTimeIsNotNull() {
            addCriterion("capture_time is not null");
            return (Criteria) this;
        }

        public Criteria andCaptureTimeEqualTo(LocalDateTime value) {
            addCriterion("capture_time =", value, "captureTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andCaptureTimeEqualToColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("capture_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCaptureTimeNotEqualTo(LocalDateTime value) {
            addCriterion("capture_time <>", value, "captureTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andCaptureTimeNotEqualToColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("capture_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCaptureTimeGreaterThan(LocalDateTime value) {
            addCriterion("capture_time >", value, "captureTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andCaptureTimeGreaterThanColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("capture_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCaptureTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("capture_time >=", value, "captureTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andCaptureTimeGreaterThanOrEqualToColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("capture_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCaptureTimeLessThan(LocalDateTime value) {
            addCriterion("capture_time <", value, "captureTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andCaptureTimeLessThanColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("capture_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCaptureTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("capture_time <=", value, "captureTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andCaptureTimeLessThanOrEqualToColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("capture_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCaptureTimeIn(List<LocalDateTime> values) {
            addCriterion("capture_time in", values, "captureTime");
            return (Criteria) this;
        }

        public Criteria andCaptureTimeNotIn(List<LocalDateTime> values) {
            addCriterion("capture_time not in", values, "captureTime");
            return (Criteria) this;
        }

        public Criteria andCaptureTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("capture_time between", value1, value2, "captureTime");
            return (Criteria) this;
        }

        public Criteria andCaptureTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("capture_time not between", value1, value2, "captureTime");
            return (Criteria) this;
        }

        public Criteria andDevIdIsNull() {
            addCriterion("dev_id is null");
            return (Criteria) this;
        }

        public Criteria andDevIdIsNotNull() {
            addCriterion("dev_id is not null");
            return (Criteria) this;
        }

        public Criteria andDevIdEqualTo(Long value) {
            addCriterion("dev_id =", value, "devId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andDevIdEqualToColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("dev_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDevIdNotEqualTo(Long value) {
            addCriterion("dev_id <>", value, "devId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andDevIdNotEqualToColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("dev_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDevIdGreaterThan(Long value) {
            addCriterion("dev_id >", value, "devId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andDevIdGreaterThanColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("dev_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDevIdGreaterThanOrEqualTo(Long value) {
            addCriterion("dev_id >=", value, "devId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andDevIdGreaterThanOrEqualToColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("dev_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDevIdLessThan(Long value) {
            addCriterion("dev_id <", value, "devId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andDevIdLessThanColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("dev_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDevIdLessThanOrEqualTo(Long value) {
            addCriterion("dev_id <=", value, "devId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andDevIdLessThanOrEqualToColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("dev_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDevIdIn(List<Long> values) {
            addCriterion("dev_id in", values, "devId");
            return (Criteria) this;
        }

        public Criteria andDevIdNotIn(List<Long> values) {
            addCriterion("dev_id not in", values, "devId");
            return (Criteria) this;
        }

        public Criteria andDevIdBetween(Long value1, Long value2) {
            addCriterion("dev_id between", value1, value2, "devId");
            return (Criteria) this;
        }

        public Criteria andDevIdNotBetween(Long value1, Long value2) {
            addCriterion("dev_id not between", value1, value2, "devId");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(LocalDateTime value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeEqualToColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("create_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(LocalDateTime value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeNotEqualToColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("create_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(LocalDateTime value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("create_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanOrEqualToColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("create_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(LocalDateTime value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("create_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanOrEqualToColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("create_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<LocalDateTime> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<LocalDateTime> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNull() {
            addCriterion("update_time is null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNotNull() {
            addCriterion("update_time is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeEqualTo(LocalDateTime value) {
            addCriterion("update_time =", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeEqualToColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("update_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotEqualTo(LocalDateTime value) {
            addCriterion("update_time <>", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeNotEqualToColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("update_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThan(LocalDateTime value) {
            addCriterion("update_time >", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeGreaterThanColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("update_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("update_time >=", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeGreaterThanOrEqualToColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("update_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThan(LocalDateTime value) {
            addCriterion("update_time <", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeLessThanColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("update_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("update_time <=", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeLessThanOrEqualToColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("update_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIn(List<LocalDateTime> values) {
            addCriterion("update_time in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotIn(List<LocalDateTime> values) {
            addCriterion("update_time not in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("update_time between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("update_time not between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andTargetFaceImgIsNull() {
            addCriterion("target_face_img is null");
            return (Criteria) this;
        }

        public Criteria andTargetFaceImgIsNotNull() {
            addCriterion("target_face_img is not null");
            return (Criteria) this;
        }

        public Criteria andTargetFaceImgEqualTo(String value) {
            addCriterion("target_face_img =", value, "targetFaceImg");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andTargetFaceImgEqualToColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("target_face_img = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTargetFaceImgNotEqualTo(String value) {
            addCriterion("target_face_img <>", value, "targetFaceImg");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andTargetFaceImgNotEqualToColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("target_face_img <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTargetFaceImgGreaterThan(String value) {
            addCriterion("target_face_img >", value, "targetFaceImg");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andTargetFaceImgGreaterThanColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("target_face_img > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTargetFaceImgGreaterThanOrEqualTo(String value) {
            addCriterion("target_face_img >=", value, "targetFaceImg");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andTargetFaceImgGreaterThanOrEqualToColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("target_face_img >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTargetFaceImgLessThan(String value) {
            addCriterion("target_face_img <", value, "targetFaceImg");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andTargetFaceImgLessThanColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("target_face_img < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTargetFaceImgLessThanOrEqualTo(String value) {
            addCriterion("target_face_img <=", value, "targetFaceImg");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andTargetFaceImgLessThanOrEqualToColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("target_face_img <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTargetFaceImgLike(String value) {
            addCriterion("target_face_img like", value, "targetFaceImg");
            return (Criteria) this;
        }

        public Criteria andTargetFaceImgNotLike(String value) {
            addCriterion("target_face_img not like", value, "targetFaceImg");
            return (Criteria) this;
        }

        public Criteria andTargetFaceImgIn(List<String> values) {
            addCriterion("target_face_img in", values, "targetFaceImg");
            return (Criteria) this;
        }

        public Criteria andTargetFaceImgNotIn(List<String> values) {
            addCriterion("target_face_img not in", values, "targetFaceImg");
            return (Criteria) this;
        }

        public Criteria andTargetFaceImgBetween(String value1, String value2) {
            addCriterion("target_face_img between", value1, value2, "targetFaceImg");
            return (Criteria) this;
        }

        public Criteria andTargetFaceImgNotBetween(String value1, String value2) {
            addCriterion("target_face_img not between", value1, value2, "targetFaceImg");
            return (Criteria) this;
        }

        public Criteria andCompareScoreIsNull() {
            addCriterion("compare_Score is null");
            return (Criteria) this;
        }

        public Criteria andCompareScoreIsNotNull() {
            addCriterion("compare_Score is not null");
            return (Criteria) this;
        }

        public Criteria andCompareScoreEqualTo(Double value) {
            addCriterion("compare_Score =", value, "compareScore");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andCompareScoreEqualToColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("compare_Score = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompareScoreNotEqualTo(Double value) {
            addCriterion("compare_Score <>", value, "compareScore");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andCompareScoreNotEqualToColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("compare_Score <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompareScoreGreaterThan(Double value) {
            addCriterion("compare_Score >", value, "compareScore");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andCompareScoreGreaterThanColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("compare_Score > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompareScoreGreaterThanOrEqualTo(Double value) {
            addCriterion("compare_Score >=", value, "compareScore");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andCompareScoreGreaterThanOrEqualToColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("compare_Score >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompareScoreLessThan(Double value) {
            addCriterion("compare_Score <", value, "compareScore");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andCompareScoreLessThanColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("compare_Score < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompareScoreLessThanOrEqualTo(Double value) {
            addCriterion("compare_Score <=", value, "compareScore");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andCompareScoreLessThanOrEqualToColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("compare_Score <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCompareScoreIn(List<Double> values) {
            addCriterion("compare_Score in", values, "compareScore");
            return (Criteria) this;
        }

        public Criteria andCompareScoreNotIn(List<Double> values) {
            addCriterion("compare_Score not in", values, "compareScore");
            return (Criteria) this;
        }

        public Criteria andCompareScoreBetween(Double value1, Double value2) {
            addCriterion("compare_Score between", value1, value2, "compareScore");
            return (Criteria) this;
        }

        public Criteria andCompareScoreNotBetween(Double value1, Double value2) {
            addCriterion("compare_Score not between", value1, value2, "compareScore");
            return (Criteria) this;
        }

        public Criteria andCaptureFaceImgIsNull() {
            addCriterion("capture_face_img is null");
            return (Criteria) this;
        }

        public Criteria andCaptureFaceImgIsNotNull() {
            addCriterion("capture_face_img is not null");
            return (Criteria) this;
        }

        public Criteria andCaptureFaceImgEqualTo(String value) {
            addCriterion("capture_face_img =", value, "captureFaceImg");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andCaptureFaceImgEqualToColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("capture_face_img = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCaptureFaceImgNotEqualTo(String value) {
            addCriterion("capture_face_img <>", value, "captureFaceImg");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andCaptureFaceImgNotEqualToColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("capture_face_img <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCaptureFaceImgGreaterThan(String value) {
            addCriterion("capture_face_img >", value, "captureFaceImg");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andCaptureFaceImgGreaterThanColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("capture_face_img > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCaptureFaceImgGreaterThanOrEqualTo(String value) {
            addCriterion("capture_face_img >=", value, "captureFaceImg");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andCaptureFaceImgGreaterThanOrEqualToColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("capture_face_img >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCaptureFaceImgLessThan(String value) {
            addCriterion("capture_face_img <", value, "captureFaceImg");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andCaptureFaceImgLessThanColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("capture_face_img < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCaptureFaceImgLessThanOrEqualTo(String value) {
            addCriterion("capture_face_img <=", value, "captureFaceImg");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andCaptureFaceImgLessThanOrEqualToColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("capture_face_img <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCaptureFaceImgLike(String value) {
            addCriterion("capture_face_img like", value, "captureFaceImg");
            return (Criteria) this;
        }

        public Criteria andCaptureFaceImgNotLike(String value) {
            addCriterion("capture_face_img not like", value, "captureFaceImg");
            return (Criteria) this;
        }

        public Criteria andCaptureFaceImgIn(List<String> values) {
            addCriterion("capture_face_img in", values, "captureFaceImg");
            return (Criteria) this;
        }

        public Criteria andCaptureFaceImgNotIn(List<String> values) {
            addCriterion("capture_face_img not in", values, "captureFaceImg");
            return (Criteria) this;
        }

        public Criteria andCaptureFaceImgBetween(String value1, String value2) {
            addCriterion("capture_face_img between", value1, value2, "captureFaceImg");
            return (Criteria) this;
        }

        public Criteria andCaptureFaceImgNotBetween(String value1, String value2) {
            addCriterion("capture_face_img not between", value1, value2, "captureFaceImg");
            return (Criteria) this;
        }

        public Criteria andLibraryNameIsNull() {
            addCriterion("library_Name is null");
            return (Criteria) this;
        }

        public Criteria andLibraryNameIsNotNull() {
            addCriterion("library_Name is not null");
            return (Criteria) this;
        }

        public Criteria andLibraryNameEqualTo(Byte value) {
            addCriterion("library_Name =", value, "libraryName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andLibraryNameEqualToColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("library_Name = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLibraryNameNotEqualTo(Byte value) {
            addCriterion("library_Name <>", value, "libraryName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andLibraryNameNotEqualToColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("library_Name <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLibraryNameGreaterThan(Byte value) {
            addCriterion("library_Name >", value, "libraryName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andLibraryNameGreaterThanColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("library_Name > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLibraryNameGreaterThanOrEqualTo(Byte value) {
            addCriterion("library_Name >=", value, "libraryName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andLibraryNameGreaterThanOrEqualToColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("library_Name >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLibraryNameLessThan(Byte value) {
            addCriterion("library_Name <", value, "libraryName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andLibraryNameLessThanColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("library_Name < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLibraryNameLessThanOrEqualTo(Byte value) {
            addCriterion("library_Name <=", value, "libraryName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria andLibraryNameLessThanOrEqualToColumn(CameraCompareResult.Column column) {
            addCriterion(new StringBuilder("library_Name <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLibraryNameIn(List<Byte> values) {
            addCriterion("library_Name in", values, "libraryName");
            return (Criteria) this;
        }

        public Criteria andLibraryNameNotIn(List<Byte> values) {
            addCriterion("library_Name not in", values, "libraryName");
            return (Criteria) this;
        }

        public Criteria andLibraryNameBetween(Byte value1, Byte value2) {
            addCriterion("library_Name between", value1, value2, "libraryName");
            return (Criteria) this;
        }

        public Criteria andLibraryNameNotBetween(Byte value1, Byte value2) {
            addCriterion("library_Name not between", value1, value2, "libraryName");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table camera_compare_result
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        private CameraCompareResultExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        protected Criteria(CameraCompareResultExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public CameraCompareResultExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table camera_compare_result
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table camera_compare_result
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table camera_compare_result
         *
         * @mbg.generated
         */
        void example(com.jsc.hotspot.db.domain.CameraCompareResultExample example);
    }
}