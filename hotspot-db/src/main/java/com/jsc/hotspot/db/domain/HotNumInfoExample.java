package com.jsc.hotspot.db.domain;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class HotNumInfoExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table hot_num_info
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table hot_num_info
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table hot_num_info
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hot_num_info
     *
     * @mbg.generated
     */
    public HotNumInfoExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hot_num_info
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hot_num_info
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hot_num_info
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hot_num_info
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hot_num_info
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hot_num_info
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hot_num_info
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hot_num_info
     *
     * @mbg.generated
     */
    public HotNumInfoExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hot_num_info
     *
     * @mbg.generated
     */
    public HotNumInfoExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hot_num_info
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hot_num_info
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hot_num_info
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hot_num_info
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        HotNumInfoExample example = new HotNumInfoExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hot_num_info
     *
     * @mbg.generated
     */
    public HotNumInfoExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hot_num_info
     *
     * @mbg.generated
     */
    public HotNumInfoExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table hot_num_info
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andIdEqualToColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andIdNotEqualToColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanOrEqualToColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanOrEqualToColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andImsiIsNull() {
            addCriterion("imsi is null");
            return (Criteria) this;
        }

        public Criteria andImsiIsNotNull() {
            addCriterion("imsi is not null");
            return (Criteria) this;
        }

        public Criteria andImsiEqualTo(String value) {
            addCriterion("imsi =", value, "imsi");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andImsiEqualToColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("imsi = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andImsiNotEqualTo(String value) {
            addCriterion("imsi <>", value, "imsi");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andImsiNotEqualToColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("imsi <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andImsiGreaterThan(String value) {
            addCriterion("imsi >", value, "imsi");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andImsiGreaterThanColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("imsi > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andImsiGreaterThanOrEqualTo(String value) {
            addCriterion("imsi >=", value, "imsi");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andImsiGreaterThanOrEqualToColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("imsi >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andImsiLessThan(String value) {
            addCriterion("imsi <", value, "imsi");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andImsiLessThanColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("imsi < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andImsiLessThanOrEqualTo(String value) {
            addCriterion("imsi <=", value, "imsi");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andImsiLessThanOrEqualToColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("imsi <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andImsiLike(String value) {
            addCriterion("imsi like", value, "imsi");
            return (Criteria) this;
        }

        public Criteria andImsiNotLike(String value) {
            addCriterion("imsi not like", value, "imsi");
            return (Criteria) this;
        }

        public Criteria andImsiIn(List<String> values) {
            addCriterion("imsi in", values, "imsi");
            return (Criteria) this;
        }

        public Criteria andImsiNotIn(List<String> values) {
            addCriterion("imsi not in", values, "imsi");
            return (Criteria) this;
        }

        public Criteria andImsiBetween(String value1, String value2) {
            addCriterion("imsi between", value1, value2, "imsi");
            return (Criteria) this;
        }

        public Criteria andImsiNotBetween(String value1, String value2) {
            addCriterion("imsi not between", value1, value2, "imsi");
            return (Criteria) this;
        }

        public Criteria andImeiIsNull() {
            addCriterion("imei is null");
            return (Criteria) this;
        }

        public Criteria andImeiIsNotNull() {
            addCriterion("imei is not null");
            return (Criteria) this;
        }

        public Criteria andImeiEqualTo(String value) {
            addCriterion("imei =", value, "imei");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andImeiEqualToColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("imei = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andImeiNotEqualTo(String value) {
            addCriterion("imei <>", value, "imei");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andImeiNotEqualToColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("imei <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andImeiGreaterThan(String value) {
            addCriterion("imei >", value, "imei");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andImeiGreaterThanColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("imei > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andImeiGreaterThanOrEqualTo(String value) {
            addCriterion("imei >=", value, "imei");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andImeiGreaterThanOrEqualToColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("imei >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andImeiLessThan(String value) {
            addCriterion("imei <", value, "imei");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andImeiLessThanColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("imei < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andImeiLessThanOrEqualTo(String value) {
            addCriterion("imei <=", value, "imei");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andImeiLessThanOrEqualToColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("imei <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andImeiLike(String value) {
            addCriterion("imei like", value, "imei");
            return (Criteria) this;
        }

        public Criteria andImeiNotLike(String value) {
            addCriterion("imei not like", value, "imei");
            return (Criteria) this;
        }

        public Criteria andImeiIn(List<String> values) {
            addCriterion("imei in", values, "imei");
            return (Criteria) this;
        }

        public Criteria andImeiNotIn(List<String> values) {
            addCriterion("imei not in", values, "imei");
            return (Criteria) this;
        }

        public Criteria andImeiBetween(String value1, String value2) {
            addCriterion("imei between", value1, value2, "imei");
            return (Criteria) this;
        }

        public Criteria andImeiNotBetween(String value1, String value2) {
            addCriterion("imei not between", value1, value2, "imei");
            return (Criteria) this;
        }

        public Criteria andIsdnIsNull() {
            addCriterion("isdn is null");
            return (Criteria) this;
        }

        public Criteria andIsdnIsNotNull() {
            addCriterion("isdn is not null");
            return (Criteria) this;
        }

        public Criteria andIsdnEqualTo(String value) {
            addCriterion("isdn =", value, "isdn");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andIsdnEqualToColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("isdn = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsdnNotEqualTo(String value) {
            addCriterion("isdn <>", value, "isdn");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andIsdnNotEqualToColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("isdn <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsdnGreaterThan(String value) {
            addCriterion("isdn >", value, "isdn");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andIsdnGreaterThanColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("isdn > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsdnGreaterThanOrEqualTo(String value) {
            addCriterion("isdn >=", value, "isdn");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andIsdnGreaterThanOrEqualToColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("isdn >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsdnLessThan(String value) {
            addCriterion("isdn <", value, "isdn");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andIsdnLessThanColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("isdn < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsdnLessThanOrEqualTo(String value) {
            addCriterion("isdn <=", value, "isdn");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andIsdnLessThanOrEqualToColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("isdn <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsdnLike(String value) {
            addCriterion("isdn like", value, "isdn");
            return (Criteria) this;
        }

        public Criteria andIsdnNotLike(String value) {
            addCriterion("isdn not like", value, "isdn");
            return (Criteria) this;
        }

        public Criteria andIsdnIn(List<String> values) {
            addCriterion("isdn in", values, "isdn");
            return (Criteria) this;
        }

        public Criteria andIsdnNotIn(List<String> values) {
            addCriterion("isdn not in", values, "isdn");
            return (Criteria) this;
        }

        public Criteria andIsdnBetween(String value1, String value2) {
            addCriterion("isdn between", value1, value2, "isdn");
            return (Criteria) this;
        }

        public Criteria andIsdnNotBetween(String value1, String value2) {
            addCriterion("isdn not between", value1, value2, "isdn");
            return (Criteria) this;
        }

        public Criteria andModeIsNull() {
            addCriterion("`mode` is null");
            return (Criteria) this;
        }

        public Criteria andModeIsNotNull() {
            addCriterion("`mode` is not null");
            return (Criteria) this;
        }

        public Criteria andModeEqualTo(Byte value) {
            addCriterion("`mode` =", value, "mode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andModeEqualToColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("`mode` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModeNotEqualTo(Byte value) {
            addCriterion("`mode` <>", value, "mode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andModeNotEqualToColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("`mode` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModeGreaterThan(Byte value) {
            addCriterion("`mode` >", value, "mode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andModeGreaterThanColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("`mode` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModeGreaterThanOrEqualTo(Byte value) {
            addCriterion("`mode` >=", value, "mode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andModeGreaterThanOrEqualToColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("`mode` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModeLessThan(Byte value) {
            addCriterion("`mode` <", value, "mode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andModeLessThanColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("`mode` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModeLessThanOrEqualTo(Byte value) {
            addCriterion("`mode` <=", value, "mode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andModeLessThanOrEqualToColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("`mode` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andModeIn(List<Byte> values) {
            addCriterion("`mode` in", values, "mode");
            return (Criteria) this;
        }

        public Criteria andModeNotIn(List<Byte> values) {
            addCriterion("`mode` not in", values, "mode");
            return (Criteria) this;
        }

        public Criteria andModeBetween(Byte value1, Byte value2) {
            addCriterion("`mode` between", value1, value2, "mode");
            return (Criteria) this;
        }

        public Criteria andModeNotBetween(Byte value1, Byte value2) {
            addCriterion("`mode` not between", value1, value2, "mode");
            return (Criteria) this;
        }

        public Criteria andCaptureTimeIsNull() {
            addCriterion("capture_time is null");
            return (Criteria) this;
        }

        public Criteria andCaptureTimeIsNotNull() {
            addCriterion("capture_time is not null");
            return (Criteria) this;
        }

        public Criteria andCaptureTimeEqualTo(LocalDateTime value) {
            addCriterion("capture_time =", value, "captureTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andCaptureTimeEqualToColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("capture_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCaptureTimeNotEqualTo(LocalDateTime value) {
            addCriterion("capture_time <>", value, "captureTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andCaptureTimeNotEqualToColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("capture_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCaptureTimeGreaterThan(LocalDateTime value) {
            addCriterion("capture_time >", value, "captureTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andCaptureTimeGreaterThanColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("capture_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCaptureTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("capture_time >=", value, "captureTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andCaptureTimeGreaterThanOrEqualToColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("capture_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCaptureTimeLessThan(LocalDateTime value) {
            addCriterion("capture_time <", value, "captureTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andCaptureTimeLessThanColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("capture_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCaptureTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("capture_time <=", value, "captureTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andCaptureTimeLessThanOrEqualToColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("capture_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCaptureTimeIn(List<LocalDateTime> values) {
            addCriterion("capture_time in", values, "captureTime");
            return (Criteria) this;
        }

        public Criteria andCaptureTimeNotIn(List<LocalDateTime> values) {
            addCriterion("capture_time not in", values, "captureTime");
            return (Criteria) this;
        }

        public Criteria andCaptureTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("capture_time between", value1, value2, "captureTime");
            return (Criteria) this;
        }

        public Criteria andCaptureTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("capture_time not between", value1, value2, "captureTime");
            return (Criteria) this;
        }

        public Criteria andTargetIdIsNull() {
            addCriterion("target_id is null");
            return (Criteria) this;
        }

        public Criteria andTargetIdIsNotNull() {
            addCriterion("target_id is not null");
            return (Criteria) this;
        }

        public Criteria andTargetIdEqualTo(Long value) {
            addCriterion("target_id =", value, "targetId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andTargetIdEqualToColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("target_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTargetIdNotEqualTo(Long value) {
            addCriterion("target_id <>", value, "targetId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andTargetIdNotEqualToColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("target_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTargetIdGreaterThan(Long value) {
            addCriterion("target_id >", value, "targetId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andTargetIdGreaterThanColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("target_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTargetIdGreaterThanOrEqualTo(Long value) {
            addCriterion("target_id >=", value, "targetId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andTargetIdGreaterThanOrEqualToColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("target_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTargetIdLessThan(Long value) {
            addCriterion("target_id <", value, "targetId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andTargetIdLessThanColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("target_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTargetIdLessThanOrEqualTo(Long value) {
            addCriterion("target_id <=", value, "targetId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andTargetIdLessThanOrEqualToColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("target_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTargetIdIn(List<Long> values) {
            addCriterion("target_id in", values, "targetId");
            return (Criteria) this;
        }

        public Criteria andTargetIdNotIn(List<Long> values) {
            addCriterion("target_id not in", values, "targetId");
            return (Criteria) this;
        }

        public Criteria andTargetIdBetween(Long value1, Long value2) {
            addCriterion("target_id between", value1, value2, "targetId");
            return (Criteria) this;
        }

        public Criteria andTargetIdNotBetween(Long value1, Long value2) {
            addCriterion("target_id not between", value1, value2, "targetId");
            return (Criteria) this;
        }

        public Criteria andDevIdIsNull() {
            addCriterion("dev_id is null");
            return (Criteria) this;
        }

        public Criteria andDevIdIsNotNull() {
            addCriterion("dev_id is not null");
            return (Criteria) this;
        }

        public Criteria andDevIdEqualTo(Long value) {
            addCriterion("dev_id =", value, "devId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andDevIdEqualToColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("dev_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDevIdNotEqualTo(Long value) {
            addCriterion("dev_id <>", value, "devId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andDevIdNotEqualToColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("dev_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDevIdGreaterThan(Long value) {
            addCriterion("dev_id >", value, "devId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andDevIdGreaterThanColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("dev_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDevIdGreaterThanOrEqualTo(Long value) {
            addCriterion("dev_id >=", value, "devId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andDevIdGreaterThanOrEqualToColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("dev_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDevIdLessThan(Long value) {
            addCriterion("dev_id <", value, "devId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andDevIdLessThanColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("dev_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDevIdLessThanOrEqualTo(Long value) {
            addCriterion("dev_id <=", value, "devId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andDevIdLessThanOrEqualToColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("dev_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDevIdIn(List<Long> values) {
            addCriterion("dev_id in", values, "devId");
            return (Criteria) this;
        }

        public Criteria andDevIdNotIn(List<Long> values) {
            addCriterion("dev_id not in", values, "devId");
            return (Criteria) this;
        }

        public Criteria andDevIdBetween(Long value1, Long value2) {
            addCriterion("dev_id between", value1, value2, "devId");
            return (Criteria) this;
        }

        public Criteria andDevIdNotBetween(Long value1, Long value2) {
            addCriterion("dev_id not between", value1, value2, "devId");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(LocalDateTime value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeEqualToColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("create_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(LocalDateTime value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeNotEqualToColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("create_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(LocalDateTime value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("create_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanOrEqualToColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("create_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(LocalDateTime value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("create_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanOrEqualToColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("create_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<LocalDateTime> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<LocalDateTime> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNull() {
            addCriterion("update_time is null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNotNull() {
            addCriterion("update_time is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeEqualTo(LocalDateTime value) {
            addCriterion("update_time =", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeEqualToColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("update_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotEqualTo(LocalDateTime value) {
            addCriterion("update_time <>", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeNotEqualToColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("update_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThan(LocalDateTime value) {
            addCriterion("update_time >", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeGreaterThanColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("update_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("update_time >=", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeGreaterThanOrEqualToColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("update_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThan(LocalDateTime value) {
            addCriterion("update_time <", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeLessThanColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("update_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("update_time <=", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeLessThanOrEqualToColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("update_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIn(List<LocalDateTime> values) {
            addCriterion("update_time in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotIn(List<LocalDateTime> values) {
            addCriterion("update_time not in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("update_time between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("update_time not between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andAttributionIsNull() {
            addCriterion("attribution is null");
            return (Criteria) this;
        }

        public Criteria andAttributionIsNotNull() {
            addCriterion("attribution is not null");
            return (Criteria) this;
        }

        public Criteria andAttributionEqualTo(String value) {
            addCriterion("attribution =", value, "attribution");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andAttributionEqualToColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("attribution = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAttributionNotEqualTo(String value) {
            addCriterion("attribution <>", value, "attribution");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andAttributionNotEqualToColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("attribution <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAttributionGreaterThan(String value) {
            addCriterion("attribution >", value, "attribution");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andAttributionGreaterThanColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("attribution > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAttributionGreaterThanOrEqualTo(String value) {
            addCriterion("attribution >=", value, "attribution");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andAttributionGreaterThanOrEqualToColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("attribution >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAttributionLessThan(String value) {
            addCriterion("attribution <", value, "attribution");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andAttributionLessThanColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("attribution < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAttributionLessThanOrEqualTo(String value) {
            addCriterion("attribution <=", value, "attribution");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andAttributionLessThanOrEqualToColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("attribution <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAttributionLike(String value) {
            addCriterion("attribution like", value, "attribution");
            return (Criteria) this;
        }

        public Criteria andAttributionNotLike(String value) {
            addCriterion("attribution not like", value, "attribution");
            return (Criteria) this;
        }

        public Criteria andAttributionIn(List<String> values) {
            addCriterion("attribution in", values, "attribution");
            return (Criteria) this;
        }

        public Criteria andAttributionNotIn(List<String> values) {
            addCriterion("attribution not in", values, "attribution");
            return (Criteria) this;
        }

        public Criteria andAttributionBetween(String value1, String value2) {
            addCriterion("attribution between", value1, value2, "attribution");
            return (Criteria) this;
        }

        public Criteria andAttributionNotBetween(String value1, String value2) {
            addCriterion("attribution not between", value1, value2, "attribution");
            return (Criteria) this;
        }

        public Criteria andCountryIsNull() {
            addCriterion("country is null");
            return (Criteria) this;
        }

        public Criteria andCountryIsNotNull() {
            addCriterion("country is not null");
            return (Criteria) this;
        }

        public Criteria andCountryEqualTo(Integer value) {
            addCriterion("country =", value, "country");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andCountryEqualToColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("country = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCountryNotEqualTo(Integer value) {
            addCriterion("country <>", value, "country");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andCountryNotEqualToColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("country <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCountryGreaterThan(Integer value) {
            addCriterion("country >", value, "country");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andCountryGreaterThanColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("country > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCountryGreaterThanOrEqualTo(Integer value) {
            addCriterion("country >=", value, "country");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andCountryGreaterThanOrEqualToColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("country >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCountryLessThan(Integer value) {
            addCriterion("country <", value, "country");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andCountryLessThanColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("country < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCountryLessThanOrEqualTo(Integer value) {
            addCriterion("country <=", value, "country");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andCountryLessThanOrEqualToColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("country <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCountryIn(List<Integer> values) {
            addCriterion("country in", values, "country");
            return (Criteria) this;
        }

        public Criteria andCountryNotIn(List<Integer> values) {
            addCriterion("country not in", values, "country");
            return (Criteria) this;
        }

        public Criteria andCountryBetween(Integer value1, Integer value2) {
            addCriterion("country between", value1, value2, "country");
            return (Criteria) this;
        }

        public Criteria andCountryNotBetween(Integer value1, Integer value2) {
            addCriterion("country not between", value1, value2, "country");
            return (Criteria) this;
        }

        public Criteria andAttrIsNull() {
            addCriterion("attr is null");
            return (Criteria) this;
        }

        public Criteria andAttrIsNotNull() {
            addCriterion("attr is not null");
            return (Criteria) this;
        }

        public Criteria andAttrEqualTo(Integer value) {
            addCriterion("attr =", value, "attr");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andAttrEqualToColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("attr = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAttrNotEqualTo(Integer value) {
            addCriterion("attr <>", value, "attr");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andAttrNotEqualToColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("attr <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAttrGreaterThan(Integer value) {
            addCriterion("attr >", value, "attr");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andAttrGreaterThanColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("attr > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAttrGreaterThanOrEqualTo(Integer value) {
            addCriterion("attr >=", value, "attr");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andAttrGreaterThanOrEqualToColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("attr >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAttrLessThan(Integer value) {
            addCriterion("attr <", value, "attr");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andAttrLessThanColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("attr < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAttrLessThanOrEqualTo(Integer value) {
            addCriterion("attr <=", value, "attr");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria andAttrLessThanOrEqualToColumn(HotNumInfo.Column column) {
            addCriterion(new StringBuilder("attr <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAttrIn(List<Integer> values) {
            addCriterion("attr in", values, "attr");
            return (Criteria) this;
        }

        public Criteria andAttrNotIn(List<Integer> values) {
            addCriterion("attr not in", values, "attr");
            return (Criteria) this;
        }

        public Criteria andAttrBetween(Integer value1, Integer value2) {
            addCriterion("attr between", value1, value2, "attr");
            return (Criteria) this;
        }

        public Criteria andAttrNotBetween(Integer value1, Integer value2) {
            addCriterion("attr not between", value1, value2, "attr");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table hot_num_info
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        private HotNumInfoExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        protected Criteria(HotNumInfoExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public HotNumInfoExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table hot_num_info
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table hot_num_info
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hot_num_info
         *
         * @mbg.generated
         */
        void example(com.jsc.hotspot.db.domain.HotNumInfoExample example);
    }
}